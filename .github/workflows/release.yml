on:
  workflow_run:
    workflows: ["Run tests"]
    branches: [main]
    types: [completed]
  workflow_dispatch:

name: Create Release

permissions:
  id-token: write
  contents: write

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Check preconditions
        if: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.conclusion != 'success' }}
        run: echo "Tests failed, skipping release creation." && exit 1

      - uses: actions/checkout@v4

      - name: Fetch tags
        run: git fetch --prune --unshallow --tags

      - name: Check if package version changed
        id: check_version
        run: |
          version="v$(cat package.json | jq -r '.version')"
          if [ $(git tag -l "$version") ]; then
            echo "Tag $version already exists."
          else
            echo "version_tag=$version" >> "$GITHUB_OUTPUT"
          fi

      - uses: actions/setup-node@v5
        if: steps.check_version.outputs.version_tag
        with:
          node-version-file: .nvmrc
          cache: npm
          registry-url: "https://registry.npmjs.org"

      - name: Update npm
        if: steps.check_version.outputs.version_tag
        run: npm install -g npm@^11.5.1 # We need at least npm 11.5.1 for trusted publishing

      - name: Install dependencies
        if: steps.check_version.outputs.version_tag
        run: npm ci

      - name: Create GitHub release
        if: steps.check_version.outputs.version_tag
        run: |
          gh release create ${{ steps.check_version.outputs.version_tag }} --generate-notes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to NPM
        if: steps.check_version.outputs.version_tag
        run: |
          if [[ ${{ steps.check_version.outputs.version_tag }} =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            npm publish --access public
          else
            # For pre-release versions, use the 'next' tag
            npm publish --access public --tag next
          fi
